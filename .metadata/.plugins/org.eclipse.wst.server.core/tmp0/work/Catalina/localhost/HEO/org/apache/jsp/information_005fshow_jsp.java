/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-10-26 00:29:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class information_005fshow_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/views/header.jsp", Long.valueOf(1508805489000L));
    _jspx_dependants.put("jar:file:/Users/guoshuai/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HEO/WEB-INF/lib/standard-1.1.2.jar!/META-INF/fn.tld", Long.valueOf(1098682290000L));
    _jspx_dependants.put("/WEB-INF/views/footer.jsp", Long.valueOf(1508505273000L));
    _jspx_dependants.put("jar:file:/Users/guoshuai/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HEO/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
    _jspx_dependants.put("jar:file:/Users/guoshuai/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HEO/WEB-INF/lib/standard-1.1.2.jar!/META-INF/fmt.tld", Long.valueOf(1098682290000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1429695504000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<!-- Set render engine for 360 browser -->\n");
      out.write("<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("\n");
      out.write("<!-- No Baidu Siteapp-->\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n");
      out.write("\n");
      out.write("<link rel=\"icon\" type=\"image/png\" href=\"assets/i/favicon.png\">\n");
      out.write("\n");
      out.write("<!-- Add to homescreen for Chrome on Android -->\n");
      out.write("<meta name=\"mobile-web-app-capable\" content=\"yes\">\n");
      out.write("<link rel=\"icon\" sizes=\"192x192\" href=\"assets/i/app-icon72x72@2x.png\">\n");
      out.write("\n");
      out.write("<!-- Add to homescreen for Safari on iOS -->\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n");
      out.write("<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n");
      out.write("<meta name=\"apple-mobile-web-app-title\" content=\"Amaze UI\" />\n");
      out.write("<link rel=\"apple-touch-icon-precomposed\"\n");
      out.write("\thref=\"assets/i/app-icon72x72@2x.png\">\n");
      out.write("\n");
      out.write("<!-- Tile icon for Win8 (144x144 + tile color) -->\n");
      out.write("<meta name=\"msapplication-TileImage\"\n");
      out.write("\tcontent=\"assets/i/app-icon72x72@2x.png\">\n");
      out.write("<meta name=\"msapplication-TileColor\" content=\"#0e90d2\">\n");
      out.write("<link rel=\"stylesheet\" href=\"./assets/css/amazeui.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"./assets/css/amazeui.min.css\">\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"./assets/css/amazeui.datatables.min.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/app.css\">\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/public.css\">\n");
      out.write("\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<header class=\"am-topbar am-topbar-fixed-top wos-header\">\n");
      out.write("\t<div class=\"am-container\">\n");
      out.write("\t\t<h1 class=\"am-topbar-brand\">\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/WEB-INF/views/home.jsp\">互助</a>\n");
      out.write("\t\t</h1>\n");
      out.write("\n");
      out.write("\t\t<button\n");
      out.write("\t\t\tclass=\"am-topbar-btn am-topbar-toggle am-btn am-btn-sm am-btn-warning am-show-sm-only\"\n");
      out.write("\t\t\tdata-am-collapse=\"{target: '#collapse-head'}\">\n");
      out.write("\t\t\t<span class=\"am-sr-only\">导航切换</span> <span class=\"am-icon-bars\"></span>\n");
      out.write("\t\t</button>\n");
      out.write("\n");
      out.write("\t\t<div class=\"am-collapse am-topbar-collapse\" id=\"collapse-head\">\n");
      out.write("\t\t\t<ul class=\"am-nav am-nav-pills am-topbar-nav\">\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/home.jsp\">首页</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"information.jsp\">今日资讯</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/diary.jsp\">专栏</a></li>\n");
      out.write("\t\t\t\t<li class=\"am-dropdown\" data-am-dropdown><a\n");
      out.write("\t\t\t\t\tclass=\"am-dropdown-toggle\" data-am-dropdown-toggle\n");
      out.write("\t\t\t\t\thref=\"javascript:;\"> 案例 <span class=\"am-icon-caret-down\"></span>\n");
      out.write("\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t<ul class=\"am-dropdown-content\">\n");
      out.write("\t\t\t\t\t\t<li class=\"am-dropdown-header\">案例</li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">1. 游戏案例</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">2. 营销案例</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">3. 工具案例</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"cases.html\">4. 全部案例</a></li>\n");
      out.write("\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t<li><a href=\"profile.html\">评测</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/WEB-INF/views/activity.jsp\">活动</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"am-topbar-right\">\n");
      out.write("\t\t\t\t<button class=\"am-btn am-btn-danger am-topbar-btn am-btn-sm\"\n");
      out.write("\t\t\t\t\tdata-am-offcanvas=\"{target: '#myside',effect: 'push'}\">\n");
      out.write("\t\t\t\t\t<span class=\"am-icon-home am-icon-sm\"></span>\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t</header>\n");
      out.write("\t<!-- 侧边栏内容 -->\n");
      out.write("\t<div id=\"myside\" class=\"am-offcanvas\">\n");
      out.write("\t\t<div class=\"am-offcanvas-bar am-offcanvas-bar-flip\">\n");
      out.write("\t\t\t<div class=\"am-offcanvas-content\">\n");
      out.write("\t\t\t\t<div class=\"am-g login-face-center\">\n");
      out.write("\t\t\t\t\t<img class=\"am-circle am-img-thumbnail\"\n");
      out.write("\t\t\t\t\t\tsrc=\"http://s.amazeui.org/media/i/demos/bw-2014-06-19.jpg?imageView/1/w/1000/h/1000/q/80\"\n");
      out.write("\t\t\t\t\t\twidth=\"140\" height=\"140\" style=\"text-align: center;\" />\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"am-g\">\n");
      out.write("\t\t\t\t\t<ul class=\"am-nav side_content\">\n");
      out.write("\t\t\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login.jsp\">登录</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/register.do\">注册</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">消息</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"am-nav-divider\"></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">我的动态</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">设置</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<!--[if (gte IE 9)|!(IE)]><!-->\n");
      out.write("\t<script src=\"./assets/js/jquery.min.js\"></script>\n");
      out.write("\t<!--<![endif]-->\n");
      out.write("\t<!--[if lte IE 8 ]>\n");
      out.write("<script src=\"http://libs.baidu.com/jquery/1.11.3/jquery.min.js\"></script>\n");
      out.write("<script src=\"http://cdn.staticfile.org/modernizr/2.8.3/modernizr.js\"></script>\n");
      out.write("<script src=\"assets/js/amazeui.ie8polyfill.min.js\"></script>\n");
      out.write("<![endif]-->\n");
      out.write("\t<script src=\"./assets/js/amazeui.min.js\"></script>\n");
      out.write("\t<script src=\"./assets/js/public.js\"></script>\n");
      out.write("\t<script type=\"./assets/js/amazeui.datatables.min.js\"></script>");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"am-g am-container\">\n");
      out.write("\t<div class=\"am-u-sm-12 am-u-md-12\">\n");
      out.write("\t\t<div class=\"newstitles\">\n");
      out.write("\t\t\t<h2>Web应用架构的新趋势---前端和后端分离的一点想法</h2>\n");
      out.write("\t\t\t<img src=\"images/face3.jpg\" class=\"face\"> <span>Rosis</span>\n");
      out.write("\t\t\t时间：2017/10/20 阅读：322\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<a href=\"#\"><img src=\"images/ad2.png\" class=\"am-img-responsive\"\n");
      out.write("\t\t\twidth=\"100%\" /></a>\n");
      out.write("\n");
      out.write("\t\t<div class=\"contents\">\n");
      out.write("\t\t\t<p dir=\"ltr\">\n");
      out.write("\t\t\t\t<span\n");
      out.write("\t\t\t\t\tstyle=\"color: rgb(88, 88, 88); font-family: arial,&amp; amp; #39; microsoft yahei&amp;amp; #39; , 宋体; line-height: 28px; text-align: justify; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;\n");
      out.write("\t\t\t\t\t&nbsp; &nbsp;\n");
      out.write("\t\t\t\t\t&nbsp;最近研究servlet，看书时候书里讲到了c/s架构到b/s架构的演变，讲servlet的书都很老了，现在的b/s架构已经不是几年前的b/s架构，其实b/s架构就是web应用开发，对于这样的架构我们现在应该考虑的是前端和后端的分离（注意：这里的后端是指服务端）。\n");
      out.write("\n");
      out.write("\t\t\t\t\tWeb前端现在是一个独立的技术工种，这个工种的产生主要是针对互联网行业的需求，我在以前的文章里曾经讲到过，一个大型互联网网站，例如想淘宝网，它绝对不是一个Web项目，而是一群web项目的集合，那么如果不在前端进行整合，这么多web项目前端开发一定存在大量重复劳动，并且运维时候也存在难以统一管理的问题。本文假想一个面对需要前端资源整合的组织，如何做到前后端分离的解决思路。本文详情如下：\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t(一) 前后端分离的目的和作用\n");
      out.write("\n");
      out.write("\t\t\t\t\t做Web开发也可以说是B/S架构开发，B端和S端从技术体系角度而言异构性很大，换而言之就是B端使用的技术和S端使用的技术不适于同一个体系，这样的结果导致实际开发中，很难做到专业分工，如果项目开发过程中管控不到位，这样的问题可能会影响到整个项目的开发质量，因此前后端分离的目的之一就是要做到专业化分工，提高项目的质量和开发效率。\n");
      out.write("\n");
      out.write("\t\t\t\t\t随着技术的发展，当下的Web开发形势已经和以前有了很大的不同，早期的Web项目是一个封闭的项目，用户从浏览器里看到的页面直到后台数据库都是在一个项目里集成的，而现在Web系统的规模越来越大，中大型的Web系统是一个开放式的系统，开放型的系统用户在浏览器发起的请求可能会转发到外部的系统里进行处理，或者是本地的系统和外部系统一起完成请求的处理，此外有的请求可能不会直接请求数据库，而是请求缓存服务器，这些变化几乎都是发生在Web系统的服务端，前后端耦合度很高的Web系统服务端的复杂度提升必然带来了Web前端的复杂度的提升。因此Web前端从系统架构的角度也需要更加专业的管控，管控的作用之一就是前后端进行分离，降低前端对服务端的依耐性。\n");
      out.write("\n");
      out.write("\t\t\t\t\t富客户端应用的普及导致Web前端技术开发更加专业化，Web前端工程师成为一个独立的技术岗位，Web前端开发技术的难度也越来越高，前后端的分离就是为Web前端开发营造一个良好的开发环境，不要让前端工程师被一些不可控的外在因素所影响（例如：前后端的耦合性），最后导致前端不能专心致志做出更加好的作品。所以，前后端分离是让前后端更加专业化，在技术和管理上将前端角色更加明确，更深入的挖掘前端开发的价值。\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t(二) 现有系统架构给前后端带来的问题以及解决方法 112.png\n");
      out.write("\n");
      out.write("\t\t\t\t\t上图是目前大部分系统的架构图，虽然有些系统采用分布式架构，层与层之间使用了远程调用框架，但是本质上都逃不开上面这个架构设计。这张图是一张比较合理的图，在实际开发里最常发生的事情就是控制层（Control）越过服务层（Service）直接处理下面的资源。\n");
      out.write("\n");
      out.write("\t\t\t\t\t前后端耦合的问题主要发生在控制层（Control），控制层是前端和服务端交互的边界，但是在开发过程中控制层（Control）和服务层（Service）常常混淆不清，这就是前后端耦合度高的重要原因。\n");
      out.write("\n");
      out.write("\t\t\t\t\t因此要前后端解耦，就是要划清控制层的边界，控制层到底该属于前端还是服务端，在MVC模式里控制层作用是调度，控制层不是写业务逻辑的地方，因此将大量业务逻辑写到控制层其实是违背了MVC模式的思想，同时控制层是前端和服务端通讯的桥梁，其实控制层是参入了前端的工作任务，既然控制层要剥离业务操作同时控制层也要参入前端应用的开发，那么将控制层归为前端的一部分是完全合情合理合规的。\n");
      out.write("\n");
      out.write("\t\t\t\t\t把控制层剥离了业务逻辑处理可能会让人不知道如何开发了，我觉得有这种想法的人是开发时候没有理解透MVC模式思想，编程随意性大养成了坏习惯，这个就需要这些人一点点去适应技术新趋势的发展。\n");
      out.write("\n");
      out.write("\t\t\t\t\t前后端分离的终极目标应该是前端和服务端是完全独立的项目，前端项目包含上图里的浏览器和控制层，服务端项目包括服务层、DAO层等等，前端项目和服务端项目以高效的远程调用框架做通讯介质，项目开发时候前端项目做前端的事情，服务项目做服务端的事情，这样就让服务端开发的人员没有机会在控制层乱写代码了，保证了Web前端环境的纯粹性，最后生产发布也要独立部署，这样就达到了前后端真正解耦，但是前后端的沟通机制也是不可或缺的，我觉得它们之间的沟通使用高性能的远程调用框架，前后端相互约定通讯报文格式。.\n");
      out.write("\n");
      out.write("\t\t\t\t\t其实不管服务端还是前端宏观流程无非是输入数据à数据处理à输出数据，但是服务端要把心思花在数据处理上，前端要更多关心的是输入输出数据时候的用户体验操作，服务端开发最大的问题就是违背MVC原则，代码编写的随意性，而前端不管出于安全还是性能考虑，最好是尽量少牵涉业务。前端和后端通讯层的独立，会将前后端进行真正的解耦，前面我讲到前后真正问题就是前端和后端技术路线不一致，但是传统Web开发里前后端又要融为一体，这就导致前后端很难做到专业化分工，对于前端应该尽量弱化通讯级别的开发工作，前端通讯编程只要知道调用哪个接口，传什么参数，怎么处理响应信息就行了。这样就能让前端和后端实现真正的专业化。\n");
      out.write("\n");
      out.write("\t\t\t\t\t做到了这些，就不会发生开发时候前后端边界不清的问题了。 (三) 前后端分离的一些想法\n");
      out.write("\n");
      out.write("\t\t\t\t\t本文主题应该是前后端分离，我上面的建议是个彻底方案，要革以前系统的命，对存量系统那该如何处理，答案还是重构代码，想方设法逐步减少已经发现的前后端耦合度高的问题，这个跟我之前的建议就是小重构和大重构的区别，如果有人觉得我上面建议合适，前端组应该马上提供一套这样的框架出来，这样后面的新系统就不会在循环前面的错误了。我觉得搭建这样的框架不会太复杂的。\n");
      out.write("\n");
      out.write("\t\t\t\t\t我上面的前后端分离的目的就是将前端资源整合为一个整体，理清前后端的边界，这些做完后，前端组里该如何提升自己的能力了？\n");
      out.write("\n");
      out.write("\t\t\t\t\t这时候要让前端的东西项目化，工程化，前端技术不能再当做开发者的玩具，它也是需要大量的系统架构，开发规范，自动化压缩混淆，自动化发布，前端监控和分析，前端优化等等。\n");
      out.write("\n");
      out.write("\t\t\t\t\t上面这些问题都很重要，也很专业，如果我有机会能参入这样的事情，我还有个特别的建议，具体如下：\n");
      out.write("\n");
      out.write("\t\t\t\t\t在一个企业内部，Web前端的组件，不管这个组件是UI层级，还是javascript开发层级，都脱离不了该企业业务产品的模式，其实看看像网易，新浪这样的门户网站的前端应用组件，它们用于做门户很合适，但是用它来做企业应用软件可能就不是太好使用，因此对于组件要有一个清晰的认识，我觉得可以把组件按业务场景分类，这里我可以举个例子，如果这个企业有给门户使用的组件，而这个组件很适合门户，应该把它归为门户组件，如果某些组件适合做网站后台管理的，那么就列为后台管理组件，如果某些组件能跨多了业务场景则标记为通用组件。\n");
      out.write("\n");
      out.write("\t\t\t\t\t做分类的原因是为了理清组件的应用边界，这样我们可以有针对性的积累和完善这些组件，有意识的开发相关的组件，最终形成一个针对某个业务组件的组件仓库，这样等新需求过来，Web前端的项目经理或Web前端的技术经理可以通过场景分析该需求需要使用那些现有的技术，需求里的那些场景是要进行开发，新场景里有没有新开发的代码能生成新的组件，这就可以做到有计划有次序的积累。\n");
      out.write("\n");
      out.write("\t\t\t\t\tWeb前端的核心人员应该花更多精力去设计、积累、整理各种组件，通过实际业务需求去完善和丰富这些组件，最终达到组件可以覆盖到全公司绝大多数场景，最终通过组件积累形成完善的Web前端开发规范，这样的规范覆盖面广更加易于操作，对于企业而言Web前端开发流程就可以做到标准化，从而达到简单培训一些技术能力不高的开发人员就能完成相关的开发任务，同时也让Web前端核心人员也能很好的把控项目的质量和进度。\n");
      out.write("\n");
      out.write("\t\t\t\t\t以上就是我的一些前后端分离的想法，它是一个很宏观的想法，没有太多技术实现细节，如果这个想法如果针对存量系统，的确是一个颠覆性的方案，如果Web前端允许一切重头来做，我个人觉得这还是很好的一个思路。前后端分离是Web前端专业化的万里长征第一步，如果这一步做好，前端就有一套专属自己的优质环境，那时候Web前端就会有更大的余力做更优秀的工作，这就是我的愿景。\n");
      out.write("\n");
      out.write("\t\t\t\t</span>\n");
      out.write("\t\t\t</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t<p dir=\"ltr\" style=\"text-align: justify;\">\n");
      out.write("\t\t\t\t<font color=\"#585858\" face=\"arial, microsoft yahei, 宋体\"><span\n");
      out.write("\t\t\t\t\tstyle=\"line-height: 28px; background-color: rgb(255, 255, 255);\">原文链接：<a\n");
      out.write("\t\t\t\t\t\thref=\"http://www.cnblogs.com/sharpxiajun/p/3531665.html\"\n");
      out.write("\t\t\t\t\t\t_src=\"http://www.cnblogs.com/sharpxiajun/p/3531665.html\">http://www.cnblogs.com/sharpxiajun/p/3531665.html</a>\n");
      out.write("\t\t\t\t</span></font>\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t<p dir=\"ltr\" style=\"text-align: justify;\">\n");
      out.write("\t\t\t\t<font color=\"#585858\" face=\"arial, microsoft yahei, 宋体\"><br /></font>\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t<p dir=\"ltr\" style=\"text-align: justify;\">\n");
      out.write("\t\t\t\t<font color=\"#585858\" face=\"arial, microsoft yahei, 宋体\">本文转自XXX</font>\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"shang\">\n");
      out.write("\t\t\t<img src=\"images/shang.png\">\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<footer>\n");
      out.write("\t<div class=\"content\">\n");
      out.write("\t\t<ul class=\"am-avg-sm-5 am-avg-md-5 am-avg-lg-5 am-thumbnails\">\n");
      out.write("\t\t\t<li><a href=\"#\">联系我们</a></li>\n");
      out.write("\t\t\t<li><a href=\"#\">加入我们</a></li>\n");
      out.write("\t\t\t<li><a href=\"#\">合作伙伴</a></li>\n");
      out.write("\t\t\t<li><a href=\"#\">广告及服务</a></li>\n");
      out.write("\t\t\t<li><a href=\"#\">友情链接</a></li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t\t<div class=\"btnlogo\">\n");
      out.write("\t\t\t<img src=\"images/btnlogo.png\" />\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<p>\n");
      out.write("\t\t\tBlack出品<br>© 2016 AllMobilize, Inc. Licensed under MIT license.\n");
      out.write("\t\t\tDeveloped with WebStorm.\n");
      out.write("\t\t</p>\n");
      out.write("\t\t<div class=\"w2div\">\n");
      out.write("\t\t\t<ul data-am-widget=\"gallery\"\n");
      out.write("\t\t\t\tclass=\"am-gallery am-avg-sm-2\n");
      out.write("  am-avg-md-2 am-avg-lg-2 am-gallery-overlay\"\n");
      out.write("\t\t\t\tdata-am-gallery=\"{ pureview: true }\">\n");
      out.write("\t\t\t\t<li class=\"w2\">\n");
      out.write("\t\t\t\t\t<div class=\"am-gallery-item\">\n");
      out.write("\t\t\t\t\t\t<h3 class=\"am-gallery-title\">订阅号：Black</h3>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t\t<li class=\"w2\">\n");
      out.write("\t\t\t\t\t<div class=\"am-gallery-item\">\n");
      out.write("\t\t\t\t\t\t<a href=\"images/face3.jpg\">\n");
      out.write("\t\t\t\t\t\t\t<h3 class=\"am-gallery-title\">服务号：Black</h3>\n");
      out.write("\t\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</footer>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
